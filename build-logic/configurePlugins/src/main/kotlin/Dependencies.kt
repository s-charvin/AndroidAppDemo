import org.gradle.api.JavaVersion

object Configs {
    const val applicationId = "com.example.myapp"
    const val compileSdk = 30
    const val minSdk = 21
    const val targetSdk = 30
    const val versionCode = 1
    const val versionName = "0.0.1"
    const val compileCompatibility = "1.8"
}

object Versions {
    const val composeUi = "1.3.1"
    const val accompanist = "0.34.0"
    const val androidDesugarJdkLibs = "2.0.4"
    // AGP and tools should be updated together
    const val androidGradlePlugin = "4.1.2"
    const val androidTools = "30.1.3"
    const val androidxActivity = "1.8.2"
    const val androidxAppCompat = "1.1.0"
    const val androidxBrowser = "1.8.0"
    const val androidxComposeAlpha = "1.7.0-beta01"
    const val androidxComposeBom = "2024.02.02"
    const val androidxComposeMaterial3Adaptive = "1.0.0-beta01"
    const val androidxComposeMaterial3AdaptiveNavigationSuite = "1.3.0-beta01"
    const val androidxComposeRuntimeTracing = "1.0.0-beta01"
    const val androidxCore = "1.6.0"
    const val androidxCoreSplashscreen = "1.0.1"
    const val androidxConstraintlayout = "2.1.3"
    const val androidxDataStore = "1.0.0"
    const val androidxEspresso = "3.5.1"
    const val androidxHiltNavigationCompose = "1.2.0"
    const val androidxLifecycle = "2.3.1"
    const val androidxMacroBenchmark = "1.2.4"
    const val androidxMetrics = "1.0.0-alpha04"
    const val androidxNavigation = "2.8.0-alpha06"
    const val androidxProfileinstaller = "1.3.1"
    const val androidxTestCore = "1.5.0"
    const val androidxTestExt = "1.1.5"
    const val androidxTestRules = "1.5.0"
    const val androidxTestRunner = "1.5.2"
    const val androidxTracing = "1.0.0"
    const val androidxUiAutomator = "2.3.0"
    const val androidxWork = "2.9.0"
    const val coil = "1.4.0"
    const val dependencyGuard = "0.5.0"
    const val firebaseBom = "33.1.1"
    const val firebaseCrashlyticsPlugin = "2.9.9"
    const val firebasePerfPlugin = "1.4.2"
    const val fragment = "1.3.6"
    const val gmsPlugin = "4.4.1"
    const val googleMaterial = "1.4.0"
    const val googleOss = "17.0.1"
    const val googleOssPlugin = "0.10.6"
    const val hilt = "2.38.1"
    const val hiltExt = "1.1.0"
    const val jacoco = "0.8.7"
    const val junit4 = "4.13.2"
    const val kotlin = "1.6.0"
    const val kotlinxCoroutines = "1.5.2"
    const val kotlinxDatetime = "0.5.0"
    const val kotlinxSerializationJson = "1.6.3"

    const val moduleGraph = "2.5.0"
    const val navigation = "2.3.3"
    const val okhttp = "4.12.0"
    const val protobuf = "4.26.1"
    const val protobufPlugin = "0.9.4"
    const val retrofit = "2.9.0"
    const val retrofitKotlinxSerializationJson = "1.0.0"
    const val robolectric = "4.12.2"
    const val roborazzi = "1.7.0"
    const val room = "2.4.0"
    const val secrets = "2.0.1"
    const val truth = "1.4.2"
    const val turbine = "1.1.0"
}

object Libraries {
    const val accompanistPermissions = "com.google.accompanist:accompanist-permissions:${Versions.accompanist}"
    const val androidDesugarJdkLibs = "com.android.tools:desugar_jdk_libs:${Versions.androidDesugarJdkLibs}"
    const val androidxActivity = "androidx.activity:activity:${Versions.androidxActivity}"
    const val androidxActivityKtx = "androidx.activity:activity-ktx:${Versions.androidxActivity}"
    const val androidxAppCompat = "androidx.appcompat:appcompat:${Versions.androidxAppCompat}"
    const val androidxBenchmarkMacro = "androidx.benchmark:benchmark-macro-junit4:${Versions.androidxMacroBenchmark}"
    const val androidxBrowser = "androidx.browser:browser:${Versions.androidxBrowser}"
    const val androidxNavigationCommon = "androidx.navigation:navigation-common:${Versions.navigation}"
    const val androidxNavigationCommonKtx = "androidx.navigation:navigation-common-ktx:${Versions.navigation}"
    const val androidxNavigationFragment = "androidx.navigation:navigation-fragment:${Versions.navigation}"
    const val androidxNavigationFragmentKtx = "androidx.navigation:navigation-fragment-ktx:${Versions.navigation}"
    const val androidxNavigationUi = "androidx.navigation:navigation-ui:${Versions.navigation}"
    const val androidxNavigationUiKtx = "androidx.navigation:navigation-ui-ktx:${Versions.navigation}"
    const val androidxNavigationRuntimeKtx = "androidx.navigation:navigation-runtime-ktx:${Versions.navigation}"
    const val androidxFragment = "androidx.fragment:fragment:${Versions.fragment}"
    const val androidxFragmentKtx = "androidx.fragment:fragment-ktx:${Versions.fragment}"


    const val androidxComposeBom = "androidx.compose.ui:ui:${Versions.androidxComposeAlpha}"
    const val androidxComposeFoundation = "androidx.compose.foundation:foundation:${Versions.androidxComposeAlpha}"
    const val androidxComposeFoundationLayout = "androidx.compose.foundation:foundation-layout"
    const val androidxComposeMaterialIconsExtended = "androidx.compose.material:material-icons-extended"
    const val androidxComposeMaterial3 = "androidx.compose.material3:material3"
    const val androidxComposeMaterial3NavigationSuite = "androidx.compose.material3:material3-adaptive-navigation-suite:${Versions.androidxComposeMaterial3AdaptiveNavigationSuite}"
    const val androidxComposeMaterial3Adaptive = "androidx.compose.material3.adaptive:adaptive:${Versions.androidxComposeMaterial3Adaptive}"
    const val androidxComposeMaterial3AdaptiveLayout = "androidx.compose.material3.adaptive:adaptive-layout:${Versions.androidxComposeMaterial3Adaptive}"
    const val androidxComposeMaterial3AdaptiveNavigation = "androidx.compose.material3.adaptive:adaptive-navigation:${Versions.androidxComposeMaterial3Adaptive}"
    const val androidxComposeMaterial3WindowSizeClass = "androidx.compose.material3:material3-window-size-class"
    const val androidxComposeRuntime = "androidx.compose.runtime:runtime"
    const val androidxComposeRuntimeTracing = "androidx.compose.runtime:runtime-tracing:${Versions.androidxComposeRuntimeTracing}"
    const val androidxComposeUiTest = "androidx.compose.ui:ui-test-junit4:${Versions.androidxComposeAlpha}"
    const val androidxComposeUiTestManifest = "androidx.compose.ui:ui-test-manifest"
    const val androidxComposeUiTooling = "androidx.compose.ui:ui-tooling"
    const val androidxComposeUiToolingPreview = "androidx.compose.ui:ui-tooling-preview"
    const val androidxComposeUiUtil = "androidx.compose.ui:ui-util"
    const val androidxHiltNavigationCompose = "androidx.hilt:hilt-navigation-compose:${Versions.androidxHiltNavigationCompose}"
    const val androidxLifecycleRuntimeCompose = "androidx.lifecycle:lifecycle-runtime-compose:${Versions.androidxLifecycle}"
    const val androidxNavigationCompose = "androidx.navigation:navigation-compose:${Versions.androidxNavigation}"

    const val androidxCoreKtx = "androidx.core:core-ktx:${Versions.androidxCore}"
    const val androidxCoreSplashscreen = "androidx.core:core-splashscreen:${Versions.androidxCoreSplashscreen}"
    const val androidConstraintlayout = "androidx.constraintlayout:constraintlayout:${Versions.androidxConstraintlayout}"
    const val androidxDataStore = "androidx.datastore:datastore:${Versions.androidxDataStore}"
    const val androidxDataStoreCore = "androidx.datastore:datastore-core:${Versions.androidxDataStore}"
    const val androidxLifecycleViewmodelKtx = "androidx.lifecycle:lifecycle-viewmodel-ktx:${Versions.androidxLifecycle}"
    const val androidxLifecycleLivedataKtx = "androidx.lifecycle:lifecycle-livedata-ktx:${Versions.androidxLifecycle}"
    const val androidxLifecycleRuntimeKtx = "androidx.lifecycle:lifecycle-runtime-ktx:${Versions.androidxLifecycle}"
    const val androidxLifecycleRuntimeTesting = "androidx.lifecycle:lifecycle-runtime-testing:${Versions.androidxLifecycle}"
    const val androidxLifecycleViewModelCompose = "androidx.lifecycle:lifecycle-viewmodel-compose:${Versions.androidxLifecycle}"
    const val androidxMetrics = "androidx.metrics:metrics-performance:${Versions.androidxMetrics}"
    const val androidxNavigationTesting = "androidx.navigation:navigation-testing:${Versions.androidxNavigation}"
    const val androidxProfileinstaller = "androidx.profileinstaller:profileinstaller:${Versions.androidxProfileinstaller}"
    const val androidxTestCore = "androidx.test:core:${Versions.androidxTestCore}"
    const val androidxTestEspressoCore = "androidx.test.espresso:espresso-core:${Versions.androidxEspresso}"
    const val androidxTestExt = "androidx.test.ext:junit-ktx:${Versions.androidxTestExt}"
    const val androidxTestRules = "androidx.test:rules:${Versions.androidxTestRules}"
    const val androidxTestRunner = "androidx.test:runner:${Versions.androidxTestRunner}"
    const val androidxTestUiAutomator = "androidx.test.uiautomator:uiautomator:${Versions.androidxUiAutomator}"
    const val androidxTracingKtx = "androidx.tracing:tracing-ktx:${Versions.androidxTracing}"
    const val androidxWorkKtx = "androidx.work:work-runtime-ktx:${Versions.androidxWork}"
    const val androidxWorkTesting = "androidx.work:work-testing:${Versions.androidxWork}"
    const val coilKt = "io.coil-kt:coil:${Versions.coil}"
    const val coilKtCompose = "io.coil-kt:coil-compose:${Versions.coil}"
    const val coilKtSvg = "io.coil-kt:coil-svg:${Versions.coil}"
    const val firebaseAnalytics = "com.google.firebase:firebase-analytics"
    const val firebaseBom = "com.google.firebase:firebase-bom:${Versions.firebaseBom}"
    const val firebaseCloudMessaging = "com.google.firebase:firebase-messaging"
    const val firebaseCrashlytics = "com.google.firebase:firebase-crashlytics"
    const val firebasePerformance = "com.google.firebase:firebase-perf"
    const val firebasePerformanceGradle = "com.google.firebase:perf-plugin:${Versions.firebasePerfPlugin}"
    const val googleMaterial = "com.google.android.material:material:${Versions.googleMaterial}"
    const val googleOssLicenses = "com.google.android.gms:play-services-oss-licenses:${Versions.googleOss}"
    const val googleOssLicensesPlugin = "com.google.android.gms:oss-licenses-plugin:${Versions.googleOssPlugin}"
    const val hiltAndroid = "com.google.dagger:hilt-android:${Versions.hilt}"
    const val hiltAndroidTesting = "com.google.dagger:hilt-android-testing:${Versions.hilt}"
    const val hiltCompiler = "com.google.dagger:hilt-compiler:${Versions.hilt}"
    const val hiltCore = "com.google.dagger:hilt-core:${Versions.hilt}"
    const val hiltExtCompiler = "androidx.hilt:hilt-compiler:${Versions.hiltExt}"
    const val hiltExtWork = "androidx.hilt:hilt-work:${Versions.hiltExt}"
    const val javaxInject = "javax.inject:javax.inject:1"
    const val kotlinStdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${Versions.kotlin}"
    const val kotlinTest = "org.jetbrains.kotlin:kotlin-test:${Versions.kotlin}"
    const val kotlinxCoroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:${Versions.kotlinxCoroutines}"
    const val kotlinxCoroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:${Versions.kotlinxCoroutines}"
    const val kotlinxCoroutinesGuava = "org.jetbrains.kotlinx:kotlinx-coroutines-guava:${Versions.kotlinxCoroutines}"
    const val kotlinxCoroutinesTest = "org.jetbrains.kotlinx:kotlinx-coroutines-test:${Versions.kotlinxCoroutines}"
    const val kotlinxDatetime = "org.jetbrains.kotlinx:kotlinx-datetime:${Versions.kotlinxDatetime}"
    const val kotlinxSerializationJson = "org.jetbrains.kotlinx:kotlinx-serialization-json:${Versions.kotlinxSerializationJson}"
    const val lintApi = "com.android.tools.lint:lint-api:${Versions.androidTools}"
    const val lintChecks = "com.android.tools.lint:lint-checks:${Versions.androidTools}"
    const val lintTests = "com.android.tools.lint:lint-tests:${Versions.androidTools}"
    const val okhttpLogging = "com.squareup.okhttp3:logging-interceptor:${Versions.okhttp}"
    const val protobufKotlinLite = "com.google.protobuf:protobuf-kotlin-lite:${Versions.protobuf}"
    const val protobufProtoc = "com.google.protobuf:protoc:${Versions.protobuf}"
    const val retrofitCore = "com.squareup.retrofit2:retrofit:${Versions.retrofit}"
    const val retrofitKotlinSerialization = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:${Versions.retrofitKotlinxSerializationJson}"
    const val robolectric = "org.robolectric:robolectric:${Versions.robolectric}"
    const val roborazzi = "io.github.takahirom.roborazzi:roborazzi:${Versions.roborazzi}"
    const val roomCompiler = "androidx.room:room-compiler:${Versions.room}"
    const val roomKtx = "androidx.room:room-ktx:${Versions.room}"
    const val roomRuntime = "androidx.room:room-runtime:${Versions.room}"
    const val truth = "com.google.truth:truth:${Versions.truth}"
    const val turbine = "app.cash.turbine:turbine:${Versions.turbine}"

    const val androidGradlePlugin = "com.android.tools.build:gradle:${Versions.androidGradlePlugin}"
    const val androidToolsCommon = "com.android.tools:common:${Versions.androidTools}"
    const val composeGradlePlugin = "org.jetbrains.kotlin:compose-compiler-gradle-plugin:${Versions.kotlin}"
    const val firebaseCrashlyticsGradlePlugin = "com.google.firebase:firebase-crashlytics-gradle:${Versions.firebaseCrashlyticsPlugin}"
    const val firebasePerformanceGradlePlugin = "com.google.firebase:perf-plugin:${Versions.firebasePerfPlugin}"
    const val kotlinGradlePlugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:${Versions.kotlin}"
    const val roomGradlePlugin = "androidx.room:room-gradle-plugin:${Versions.room}"
}

object Plugins {
    const val androidApplication = "myapp.android.application"
    const val androidApplicationView = "myapp.android.application.view"
    const val androidApplicationCompose = "myapp.android.application.compose"
    const val androidLibrary = "myapp.android.library"
    const val androidLibraryView = "myapp.android.library.view"
    const val androidLibraryCompose = "myapp.android.library.compose"
    const val androidFeature = "myapp.android.feature"
    const val androidTest = "myapp.android.test"
    const val hilt = "myapp.hilt"
    const val androidRoom = "myapp.android.room"
    const val androidFlavors = "myapp.android.application.flavors"
}
